class Solution {
public:
//using standard libraries of c++
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> res(2,-1);
        if(binary_search(nums.begin(),nums.end(),target))
        {
            auto l=lower_bound(nums.begin(),nums.end(),target)-nums.begin(); // this will give the position of first occurence of the key
            auto u=upper_bound(nums.begin(),nums.end(),target)-nums.begin()-1; //this will give the position of last occurence of the key
            res[0]=l;
            res[1]=u;
        }
        else{
            res[0]=-1;
            res[1]=-1;
        }
         return res;   
        
    }
};
